name: "XML Formatter Action"
description: "Formats XML files using xmllint with options for indentation and verbosity."
author: "Juliette Folmer and Vidit Agrawal"
inputs:
  paths:
    description: "Paths to the XML files or directories to format"
    required: true
  fix:
    description: "Fix the XML formatting (true or false)"
    required: false
    default: "false"
  indentation:
    description: "Set indentation type (space or tab)"
    required: false
    default: "space"
  space_count:
    description: "Number of spaces for indentation (default: 4)"
    required: false
    default: "4"
  verbose:
    description: "Enable verbose mode"
    required: false
    default: "false"
  quiet:
    description: "Enable quiet mode"
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up environment
      shell: bash
      run: sudo apt-get update && sudo apt-get install -y libxml2-utils

    - name: Set GitHub Path
      run: echo "$GITHUB_ACTION_PATH" >> $GITHUB_PATH
      shell: bash
      env:
        GITHUB_ACTION_PATH: ${{ github.action_path }}

    - name: Run XML Formatter
      shell: bash
      run: |
        FIX_OPTION=""
        if [ "${{ inputs.fix }}" = "true" ]; then
          FIX_OPTION="-f"
        fi

        VERBOSE_OPTION=""
        if [ "${{ inputs.verbose }}" = "true" ]; then
          VERBOSE_OPTION="-v"
        fi

        QUIET_OPTION=""
        if [ "${{ inputs.quiet }}" = "true" ]; then
          QUIET_OPTION="-q"
        fi

        chmod +x ${{ github.action_path }}/xml_formatter.sh
        ${{ github.action_path }}/xml_formatter.sh $FIX_OPTION -i "${{ inputs.indentation }}" -s "${{ inputs.space_count }}" $VERBOSE_OPTION $QUIET_OPTION "${{ inputs.paths }}"

    - name: Check for changes (determine if any files were modified)
      shell: bash
      id: check_changes
      run: |
        git diff --quiet || echo "true" > /tmp/files_changed
        if [ -f /tmp/files_changed ]; then
          echo "files_fixed=true" >> $GITHUB_OUTPUT
        else
          echo "files_fixed=false" >> $GITHUB_OUTPUT
        fi

outputs:
  xml_files_update_detected:
    description: "Indicates if any XML files were fixed (true/false)"
    value: ${{ steps.check_changes.outputs.files_fixed }}

branding:
  icon: "code"
  color: "blue"
